(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[619],{6303:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/javascript/functions/UpdateProfile",function(){return n(7026)}])},7026:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return d}});var s=n(5893),r=n(2673),i=n(9298),a=n(9812);n(6834);var o=n(2643);let d=[{depth:2,value:"UpdateProfile",id:"updateprofile"},{depth:3,value:"Overview",id:"overview"},{depth:3,value:"Function Definition",id:"function-definition"},{depth:3,value:"Parameters",id:"parameters"},{depth:3,value:"Returns",id:"returns"},{depth:3,value:"Function Details",id:"function-details"},{depth:3,value:"Dependencies",id:"dependencies"},{depth:3,value:"Usage",id:"usage"}];function _createMdxContent(e){let t=Object.assign({h2:"h2",h3:"h3",p:"p",code:"code",pre:"pre",span:"span",ul:"ul",li:"li",strong:"strong",ol:"ol"},(0,o.a)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"updateprofile",children:"UpdateProfile"}),"\n",(0,s.jsx)(t.h3,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"UpdateProfile"})," function allows for updating user profile information via a custom REST API endpoint. By using this function, you can modify three primary attributes of a user profile: the first name, last name, and email. The server-side mechanism manages user authentication using nonces that are sent along as headers. When the profile update is successful, changes are reflected in the database. If any error occurs, the function will provide feedback in the form of the ",(0,s.jsx)(t.code,{children:"ProfileResponse"})," object."]}),"\n",(0,s.jsx)(t.h3,{id:"function-definition",children:"Function Definition"}),"\n",(0,s.jsx)(t.pre,{"data-language":"typescript","data-theme":"default",children:(0,s.jsxs)(t.code,{"data-language":"typescript","data-theme":"default",children:[(0,s.jsxs)(t.span,{className:"line",children:[(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"UpdateProfile"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"async"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" ("})]}),"\n",(0,s.jsxs)(t.span,{className:"line",children:[(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"    profileData"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"ProfileData"})]}),"\n",(0,s.jsxs)(t.span,{className:"line",children:[(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"): "}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-constant)"},children:"Promise"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"<"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"ProfileResponse"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:">"})]})]})}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"profileData (ProfileData):"})," Contains the details that need to be updated. It should have:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"first_name (string):"})," The first name of the user."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"last_name (string):"})," The last name of the user."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"user_email (string):"})," The email address of the user."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsxs)(t.strong,{children:[(0,s.jsx)(t.code,{children:"Promise<ProfileResponse>"}),":"]}),' The function returns a Promise. On successful profile update, it resolves to an object containing the success status, message, and potential errors. In case of a failed request, a generic error message "Something went wrong" is provided with a ',(0,s.jsx)(t.code,{children:"success"})," property set to ",(0,s.jsx)(t.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"function-details",children:"Function Details"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"API URL Construction:"})," The function constructs the API URL meant for updating user profiles."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Profile Update Request:"})," A POST request is sent to the previously mentioned API endpoint, including the profile data to be updated."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Handle Response:"})," The function waits for a response from the server. If there's a successful profile update, the updated profile data is returned. In the case of any failures, an error message is generated and returned."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"obrnArgs:"})," This function depends on the ",(0,s.jsx)(t.code,{children:"obrnArgs"})," object, which provides access to the API URL and other necessary configurations."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"UpdateProfile"})," function is essential for applications and platforms that allow users to update their profile details. Ensure to handle the response gracefully to provide users with accurate feedback based on the operation's outcome."]})]})}let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,o.a)(),e.components);return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/javascript/functions/UpdateProfile.mdx",route:"/javascript/functions/UpdateProfile",timestamp:1697462863e3,pageMap:[{kind:"Meta",data:{index:"Introduction",database:"Database",structure:"Structure",javascript:"Javascript",about:{title:"About",type:"page"},contact:{title:"Contact â†—",type:"page",href:"https://twitter.com/shuding_",newWindow:!0}}},{kind:"MdxPage",name:"about",route:"/about"},{kind:"Folder",name:"database",route:"/database",children:[{kind:"Meta",data:{"custom-tables":"Custom Tables"}},{kind:"MdxPage",name:"custom-tables",route:"/database/custom-tables"}]},{kind:"MdxPage",name:"database",route:"/database"},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"javascript",route:"/javascript",children:[{kind:"Meta",data:{functions:"Functions",events:"Events"}},{kind:"Folder",name:"events",route:"/javascript/events",children:[{kind:"MdxPage",name:"MemberLogin",route:"/javascript/events/MemberLogin"},{kind:"MdxPage",name:"MemberLoginAttempt",route:"/javascript/events/MemberLoginAttempt"},{kind:"Meta",data:{MemberLoginAttempt:"MemberLoginAttempt",MemberLogin:"MemberLogin"}}]},{kind:"Folder",name:"functions",route:"/javascript/functions",children:[{kind:"MdxPage",name:"AttemptForgot",route:"/javascript/functions/AttemptForgot"},{kind:"MdxPage",name:"AttemptLogin",route:"/javascript/functions/AttemptLogin"},{kind:"MdxPage",name:"AttemptReset",route:"/javascript/functions/AttemptReset"},{kind:"MdxPage",name:"ChangeLoginScreen",route:"/javascript/functions/ChangeLoginScreen"},{kind:"MdxPage",name:"CheckMembershipPriceValid",route:"/javascript/functions/CheckMembershipPriceValid"},{kind:"MdxPage",name:"CreateUserSubscription",route:"/javascript/functions/CreateUserSubscription"},{kind:"MdxPage",name:"StripeCreatePaymentIntent",route:"/javascript/functions/StripeCreatePaymentIntent"},{kind:"MdxPage",name:"UpdateProfile",route:"/javascript/functions/UpdateProfile"},{kind:"MdxPage",name:"VerifyCoupon",route:"/javascript/functions/VerifyCoupon"},{kind:"Meta",data:{CreateUserSubscription:"CreateUserSubscription",VerifyCoupon:"VerifyCoupon",UpdateProfile:"UpdateProfile",StripeCreatePaymentIntent:"StripeCreatePaymentIntent",CheckMembershipPriceValid:"CheckMembershipPriceValid",ChangeLoginScreen:"ChangeLoginScreen",AttemptReset:"AttemptReset",AttemptLogin:"AttemptLogin",AttemptForgot:"AttemptForgot"}}]}]},{kind:"Folder",name:"structure",route:"/structure",children:[{kind:"Meta",data:{classes:"Classes"}},{kind:"Folder",name:"classes",route:"/structure/classes",children:[{kind:"Meta",data:{models:"Models"}},{kind:"Folder",name:"models",route:"/structure/classes/models",children:[{kind:"MdxPage",name:"coupon",route:"/structure/classes/models/coupon"},{kind:"MdxPage",name:"event",route:"/structure/classes/models/event"},{kind:"MdxPage",name:"member",route:"/structure/classes/models/member"},{kind:"MdxPage",name:"membership",route:"/structure/classes/models/membership"},{kind:"MdxPage",name:"subscription",route:"/structure/classes/models/subscription"},{kind:"MdxPage",name:"transaction",route:"/structure/classes/models/transaction"},{kind:"Meta",data:{coupon:"Coupon",event:"Event",member:"Member",membership:"Membership",subscription:"Subscription",transaction:"Transaction"}}]}]}]}],flexsearch:{codeblocks:!0},title:"Updateprofile",headings:d},pageNextRoute:"/javascript/functions/UpdateProfile",nextraLayout:i.ZP,themeConfig:a.Z};t.default=(0,r.j)(c)},9812:function(e,t,n){"use strict";var s=n(5893);n(7294);let r={logo:(0,s.jsx)("span",{children:"Oberon"}),project:{link:"https://github.com/SoBold/oberon"},docsRepositoryBase:"https://github.com/SoBold/oberon-docs",footer:{text:"Oberon Docs | SoBold"}};t.Z=r}},function(e){e.O(0,[774,361,888,179],function(){return e(e.s=6303)}),_N_E=e.O()}]);